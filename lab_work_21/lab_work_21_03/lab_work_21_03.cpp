/**********************************************************/
/*                                                        */
/*  lab_work_21_03                                        */
/*  Мова: C++                                             */
/*                                                        */
/*  Робота з функцiями для обробки символiв з бiблiотеки  */
/* обробки символів <cctype>:                             */
/*  int isspace(int c);                                   */
/*  int iscntrl(int c);                                   */
/*  int ispunct(int c);                                   */
/*  int isprint(int c);                                   */
/*  int isgraph(int c);                                   */
/*                                                        */
/**********************************************************/

#include <iostream>
#include <cctype>

using namespace std;

int main() {
	// Функцiя int isspace(int c) повертає iстинне значення,
	// якщо с - пробiльний символ (\n, \t, \f, \r, \v),
	// та 0 - у протилежному випадку
	cout << "Демонструємо роботу з функцiєю isspace:" << endl;
	cout << "  " << "\\n" << (isspace('\n') ? " є" : " не є") << " бiлопробiльним символом" << endl;
	cout << "  " << "\\t" << (isspace('\t') ? " є" : " не є") << " бiлопробiльним символом" << endl;
	cout << "  " << '%' << (isspace('%') ? " є" : " не є") << " бiлопробiльним символом" << endl;

	// Функцiя int iscntrl(int c) повертає iстинне значення,
	// якщо с – є управляючим символом,
	// та 0 - у протилежному випадку
	cout << "Демонструємо роботу з функцiєю iscntrl:" << endl;
	cout << "  " << "\\n" << (iscntrl('\n') ? " є" : " не є") << " управляючим символом" << endl;
	cout << "  " << "\\t" << (iscntrl('\t') ? " є" : " не є") << " управляючим символом" << endl;
	cout << "  " << '%' << (iscntrl('%') ? " є" : " не є") << " управляючим символом" << endl;

	// Функцiя ispunct(int c) повертає iстинне значення,
	// якщо с - є друкованим символом, що не є буквою,
	// цифрою або пробiлом, та 0 - у протилежному випадку
	cout << "Демонструємо роботу з функцiєю ispunct:" << endl;
	cout << "  " << ';' << (ispunct(';') ? " є" : " не є") << " друкованим символом, що не є буквою, цифрою або пробiлом" << endl;
	cout << "  " << 'Y' << (ispunct('Y') ? " є" : " не є") << " друкованим символом, що не є буквою, цифрою або пробiлом" << endl;
	cout << "  " << '#' << (ispunct('#') ? " є" : " не є") << " друкованим символом, що не є буквою, цифрою або пробiлом" << endl;

	// Функцiя int isprint(int c) повертає iстинне значення,
	// якщо с - є друкованим символом або пробiлом,
	// та 0 -у протилежному випадку
	cout << "Демонструємо роботу з функцiєю isprint:" << endl;
	cout << "  " << '$' << (isprint('$') ? " є" : " не є") << " друкованим символом або пробiлом" << endl;
	cout << "  " << "\\a" << (isprint('\a') ? " є" : " не є") << " друкованим символом або пробiлом" << endl;
	cout << "  " << 'A' << (isprint('A') ? " є" : " не є") << " друкованим символом або пробiлом" << endl;

	// Функцiя int isgraph(int c) повертає iстинне значення,
	// якщо с - є друкованим символом, але не пробiлом,
	// та 0 -у протилежному випадку
	cout << "Демонструємо роботу з функцiєю isgraph:" << endl;
	cout << "  " << '$' << (isgraph('$') ? " є" : " не є") << " друкованим символом, але не пробiлом" << endl;
	cout << "  " << ' ' << (isgraph(' ') ? " є" : " не є") << " друкованим символом, але не пробiлом" << endl;
	cout << "  " << 'A' << (isgraph('A') ? " є" : " не є") << " друкованим символом, але не пробiлом" << endl;

	return 0;
}
